<Application x:Class="PhortyFiveSeconds.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PhortyFiveSeconds"
		 xmlns:System="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
	<Application.Resources>
		<System:Double x:Key="buttonWidth">50</System:Double>
		<System:Double x:Key="buttonBigWidth">80</System:Double>
		<System:Double x:Key="buttonWidthNarrow">30</System:Double>
		<System:Double x:Key="timerButtonsHeight">40</System:Double>
		<System:Double x:Key="TimerButtonFontSize">16</System:Double>
		<System:Double x:Key="TimeBarMaximum">200</System:Double>

		<System:Double x:Key="ControlSeparatorHeight">30</System:Double>

		<FontFamily x:Key="ButtonSymbolFont">Segoe MDL2 Assets</FontFamily>

		<SolidColorBrush x:Key="TimerActiveColor" Color="CornflowerBlue"/>
		<SolidColorBrush x:Key="TimerPausedColor" Color="LightGray"/>
		<SolidColorBrush x:Key="TimeBarPausedColor" Color="#FFFFDE95"/>
		<SolidColorBrush x:Key="TimeBarActiveColor" Color="CornflowerBlue"/>


		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" Stroke="{DynamicResource Button.Focus.Border}" SnapsToDevicePixels="true" StrokeThickness="1"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="Transparent" />
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#7FBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#7F3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#7FC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#7F2C628B"/>

		<SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent" />
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFC3C3C3"/>

		<SolidColorBrush x:Key="Button.Focus.Border" Color="#CCC4E5F6"/>
		<SolidColorBrush x:Key="Button.Active.Foreground" Color="#B2BEE6FD"/>
		<SolidColorBrush x:Key="Button.Paused.Foreground" Color="#B2FDEFBE"/>

		<SolidColorBrush x:Key="SubtleMiniButton.Foreground" Color="#4C373737"/>
		<SolidColorBrush x:Key="MainControlsSeparator.Background" Color="#335A5A5A"/>

		<Style x:Key="MainControlButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="#FF555555"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<SolidColorBrush x:Key="GestureAreaButton.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="GestureAreaButton.MouseOver.Background" Color="#22FFFFFF"/>
		<SolidColorBrush x:Key="GestureAreaButton.MouseOver.Foreground" Color="#EE111111"/>
		<SolidColorBrush x:Key="GestureAreaButton.MouseOver.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="GestureAreaButton.Pressed.Background" Color="#55BEE6FD"/>
		<SolidColorBrush x:Key="GestureAreaButton.Pressed.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="GestureAreaButton.Pressed.Foreground" Color="CornflowerBlue"/>
		<SolidColorBrush x:Key="GestureAreaButton.Disabled.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="GestureAreaButton.Disabled.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="GestureAreaButton.Disabled.Foreground" Color="Transparent"/>

		<Style x:Key="GestureAreaButton" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{StaticResource GestureAreaButton.Static.Border}"/>
			<Setter Property="Foreground" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
			<Setter Property="FontSize" Value="50" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource GestureAreaButton.MouseOver.Background}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GestureAreaButton.MouseOver.Foreground}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource GestureAreaButton.Pressed.Background}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GestureAreaButton.Pressed.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="SubtleMiniButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{StaticResource SubtleMiniButton.Foreground}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Margin" Value="5, 0"/>
			<Setter Property="Padding" Value="3, 2"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="MainControlsSeparatorStyle" TargetType="{x:Type Separator}">
			<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="1" SnapsToDevicePixels="true"/>
		</ControlTemplate>

	</Application.Resources>

</Application>
